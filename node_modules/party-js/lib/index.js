"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
var components = require("./components");
var emitter_1 = require("./particles/emitter");
var particle_1 = require("./particles/particle");
var scene_1 = require("./scene");
var settings_1 = require("./settings");
var math = require("./systems/math");
var modules = require("./systems/modules");
var random = require("./systems/random");
var shapes = require("./systems/shapes");
var sources = require("./systems/sources");
var variation = require("./systems/variation");
var templates = require("./templates");
var util = require("./util");
// Create the lazy-initializing scene.
var scene = new util.Lazy(function () {
    // The library requires the use of the DOM, hence it cannot run in non-browser environments.
    if (typeof document === "undefined" || typeof window === "undefined") {
        throw new Error("It seems like you are trying to run party.js in a non-browser-like environment, which is not supported.");
    }
    return new scene_1.Scene();
});
var PartyGlobal = __assign(__assign(__assign(__assign(__assign({}, components), templates), shapes), modules), { 
    // Export the scene and the global settings.
    scene: scene,
    settings: settings_1.settings,
    // Export the emitter and particle types.
    Particle: particle_1.Particle,
    Emitter: emitter_1.Emitter,
    // Export various utilities and objects.
    variation: variation,
    sources: sources,
    random: random,
    math: math,
    util: util,
    /**
     * Forces the initialization of the otherwise lazy scene.
     */
    forceInit: function () {
        scene.current;
    } });
exports.default = PartyGlobal;
//# sourceMappingURL=index.js.map